name: build, publish and deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:  
  push_to_registry:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: abzy128/abzy-kz

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: push_to_registry
    outputs:
      deployment_exists: $DEPLOYMENT_EXISTS
    steps:
      - uses: actions/checkout@v4
      - uses: actions-hub/kubectl@master
        id: check_deployment
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: get deployment abzy-kz --ignore-not-found >> $DEPLOYMENT_EXISTS

  
  initial_deploy:
    name: Initial Deployment
    if: ${{ !needs.deploy.outputs.deployment_exists }}
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f .k8s/deployment.yaml
  
  update_deployment:
    name: Update Deployment
    if: ${{ needs.deploy.outputs.deployment_exists }}
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout restart deployment/abzy-kz
